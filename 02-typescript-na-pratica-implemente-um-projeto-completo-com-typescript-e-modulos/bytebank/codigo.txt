//Tipos primitivos

let valor: number = 3000;
let nome: string = "";
let isPago: boolean = false;
let qualquer: any = "";

//Arrays

const lista: number[] = [];
lista.push(22, 2, 4, 6);

//Tipos personalizados (Type Alias)

type Transacao = {
   tipoTransacao: TipoTransacao;
   data: Date;
   valor: number;
};

//Enum

enum TipoTransacao {
   DEPOSITO = "Depósito",
   TRANSFERENCIA = "Transferência",
   PAGAMENTO_BOLETO = "Pagamento de Boleto",
}

const novaTransacao: Transacao = {
   tipoTransacao: TipoTransacao.DEPOSITO,
   data: new Date(),
   valor: 0,
}; 

----------------------------------------------------------------------

agruparTransacoes(): ResumoTransacoes {
   const resumo: ResumoTransacoes = {
      totalDepositos: 0,
      totalTransferencias: 0,
      totalPagamentosBoleto: 0,
   };

   this.transacoes.forEach((transacao) => {
      switch (transacao.tipoTransacao) {
         case TipoTransacao.DEPOSITO:
            resumo.totalDepositos += transacao.valor;
            break;
         case TipoTransacao.TRANSFERENCIA:
            resumo.totalTransferencias += transacao.valor;
            break;
         case TipoTransacao.PAGAMENTO_BOLETO:
            resumo.totalPagamentosBoleto += transacao.valor;
            break;
      }
   });

   return resumo;
},
